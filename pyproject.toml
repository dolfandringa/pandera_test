[tool.poetry]
name = "pandera-test"
version = "0.1.0"
description = ""
authors = ["Dolf Andringa <dolfandringa@gmail.com>"]
license = "GPL-3.0-only"
readme = "README.md"
packages = [{include = "pandera_test"}]

[tool.poetry.dependencies]
python = "^3.11"
pandera = {extras = ["polars", "mypy"], version = "^0.22.1"}
pandas = "^2.2.3"

[tool.poetry.group.dev.dependencies]
black = ">=23.7.0"
pre-commit = ">=3.3.3"
pyright = ">=1.1.320"
pytest = ">=7.4.0"
pytest-cov = ">=4.1.0"
pytest-mock = ">=3.11.1"
ruff = ">=0.0.283"
pyupgrade = "^3.19.1"
isort = "^5.13.2"
pandas-stubs = "^2.2.3.241126"

[tool.pyright]
stubPath = "./typings"
reportImportCycles = false
typeCheckingMode = "strict"
venv = ".venv"
venvPath = "."
exclude = [
    "./typings/*",
    "**/node_modules",
    "**/__pycache__",
    "**/.*",
]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--cov",
    "--ignore=package",
    "--ignore=dist"
]

[tool.coverage.run]
branch = true
source = ["./pandera_test"]

[tool.coverage.report]
exclude_also = [
    "if .*TYPE_CHECKING:",
    "@overload",
    "@typing.overload",
    "@abstractmethod",
    "@abc.abstractmethod",
]
#fail_under = 100
show_missing = true

[tool.ruff.lint]
# Ignore max line length - black will handle this and it's okay to go over somtimes.
ignore = ["E501"]

[tool.ruff]
extend-exclude = [
    "typings/*",
]

[tool.black]
extend_exclude = "^/typings/.*$"

[tool.isort]
profile = "black"
force_single_line = "true"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
